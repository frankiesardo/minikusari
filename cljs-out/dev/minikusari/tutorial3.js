// Compiled by ClojureScript 1.10.773 {:static-fns true, :optimize-constants true}
goog.provide('minikusari.tutorial3');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('sablono.core');
goog.require('minikusari.core');
goog.require('datascript.core');
minikusari.tutorial3.horiz_vel = -0.15;
minikusari.tutorial3.gravity = 0.05;
minikusari.tutorial3.jump_vel = (21);
minikusari.tutorial3.start_y = (312);
minikusari.tutorial3.bottom_y = (561);
minikusari.tutorial3.flappy_x = (212);
minikusari.tutorial3.flappy_width = (57);
minikusari.tutorial3.flappy_height = (41);
minikusari.tutorial3.pillar_spacing = (324);
minikusari.tutorial3.pillar_gap = (158);
minikusari.tutorial3.pillar_width = (86);
minikusari.tutorial3.flappy_db = datascript.core.db_with((datascript.core.empty_db.cljs$core$IFn$_invoke$arity$0 ? datascript.core.empty_db.cljs$core$IFn$_invoke$arity$0() : datascript.core.empty_db.call(null)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$kw$game_SLASH_score,(0),cljs.core.cst$kw$game_SLASH_start_DASH_time,(0),cljs.core.cst$kw$game_SLASH_border_DASH_pos,(0)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$flappy_SLASH_active_QMARK_,false,cljs.core.cst$kw$flappy_SLASH_start_DASH_time,(0),cljs.core.cst$kw$flappy_SLASH_cur_DASH_y,minikusari.tutorial3.start_y], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$pillar_SLASH_start_DASH_time,(0),cljs.core.cst$kw$pillar_SLASH_start_DASH_x,(900),cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,(900),cljs.core.cst$kw$pillar_SLASH_upper_DASH_height,(200)], null)], null));
minikusari.tutorial3.sine_wave = (function minikusari$tutorial3$sine_wave(time_delta){
return (minikusari.tutorial3.start_y + ((30) * Math.sin((time_delta / (300)))));
});
minikusari.tutorial3.new_y = (function minikusari$tutorial3$new_y(time_delta,flappy_y){
var jump_vel = (21);
var cur_vel = (jump_vel - (time_delta * minikusari.tutorial3.gravity));
var new_y = (flappy_y - cur_vel);
var x__4217__auto__ = new_y;
var y__4218__auto__ = (minikusari.tutorial3.bottom_y - minikusari.tutorial3.flappy_height);
return ((x__4217__auto__ < y__4218__auto__) ? x__4217__auto__ : y__4218__auto__);
});
minikusari.tutorial3.rand_height = (function minikusari$tutorial3$rand_height(){
return ((60) + cljs.core.rand_int(((minikusari.tutorial3.bottom_y - (120)) - minikusari.tutorial3.pillar_gap)));
});
minikusari.tutorial3.translate = (function minikusari$tutorial3$translate(start_pos,vel,time){
return Math.floor((start_pos + (time * vel)));
});
minikusari.tutorial3.curr_pillar_pos = (function minikusari$tutorial3$curr_pillar_pos(cur_time,start_x,start_time){
return minikusari.tutorial3.translate(start_x,minikusari.tutorial3.horiz_vel,(cur_time - start_time));
});
minikusari.tutorial3.pillars_in_world = (function minikusari$tutorial3$pillars_in_world(db){
var G__27025 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,cljs.core.list(cljs.core.cst$sym$count,cljs.core.cst$sym$_QMARK_e),cljs.core.cst$sym$_DOT_,cljs.core.cst$kw$in,cljs.core.cst$sym$$,cljs.core.cst$sym$pillar_DASH_width,cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,cljs.core.cst$sym$_QMARK_cur_DASH_x], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_GT_,cljs.core.cst$sym$_QMARK_cur_DASH_x,cljs.core.cst$sym$pillar_DASH_width)], null)], null);
var G__27026 = db;
var G__27027 = (- minikusari.tutorial3.pillar_width);
return (datascript.core.q.cljs$core$IFn$_invoke$arity$3 ? datascript.core.q.cljs$core$IFn$_invoke$arity$3(G__27025,G__27026,G__27027) : datascript.core.q.call(null,G__27025,G__27026,G__27027));
});
minikusari.tutorial3.new_pillar_start_x = (function minikusari$tutorial3$new_pillar_start_x(db){
return (minikusari.tutorial3.pillar_spacing + (function (){var G__27028 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,cljs.core.list(cljs.core.cst$sym$max,cljs.core.cst$sym$_QMARK_cur_DASH_x),cljs.core.cst$sym$_DOT_,cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,cljs.core.cst$sym$_QMARK_cur_DASH_x], null)], null);
var G__27029 = db;
return (datascript.core.q.cljs$core$IFn$_invoke$arity$2 ? datascript.core.q.cljs$core$IFn$_invoke$arity$2(G__27028,G__27029) : datascript.core.q.call(null,G__27028,G__27029));
})());
});
minikusari.tutorial3.in_pillar_QMARK_ = (function minikusari$tutorial3$in_pillar_QMARK_(cur_x){
return ((((minikusari.tutorial3.flappy_x + minikusari.tutorial3.flappy_width) >= cur_x)) && ((minikusari.tutorial3.flappy_x < (cur_x + minikusari.tutorial3.pillar_width))));
});
minikusari.tutorial3.in_pillar_gap_QMARK_ = (function minikusari$tutorial3$in_pillar_gap_QMARK_(cur_y,upper_height){
return (((upper_height < cur_y)) && (((upper_height + minikusari.tutorial3.pillar_gap) > (cur_y + minikusari.tutorial3.flappy_height))));
});
minikusari.tutorial3.bottom_collision_QMARK_ = (function minikusari$tutorial3$bottom_collision_QMARK_(cur_y){
return (cur_y >= (minikusari.tutorial3.bottom_y - minikusari.tutorial3.flappy_height));
});
minikusari.tutorial3.collision_QMARK_ = (function minikusari$tutorial3$collision_QMARK_(cur_x,upper_height,cur_y){
return ((minikusari.tutorial3.bottom_collision_QMARK_(cur_y)) || (((minikusari.tutorial3.in_pillar_QMARK_(cur_x)) && ((!(minikusari.tutorial3.in_pillar_gap_QMARK_(cur_y,upper_height)))))));
});
minikusari.tutorial3.calc_score = (function minikusari$tutorial3$calc_score(cur_time,start_time){
var x__4214__auto__ = (Math.abs(Math.floor(((((cur_time - start_time) * minikusari.tutorial3.horiz_vel) - (544)) / minikusari.tutorial3.pillar_spacing))) - (4));
var y__4215__auto__ = (0);
return ((x__4214__auto__ > y__4215__auto__) ? x__4214__auto__ : y__4215__auto__);
});
/**
 * Returns a new db with all inferred facts and a list of tx-data.
 *   Stops when no more rules apply or after 100 iterations
 */
minikusari.tutorial3.infer = (function minikusari$tutorial3$infer(db,rules){
var db__$1 = db;
var max_iter = (100);
while(true){
var tx_data = (function (){var iter__4529__auto__ = ((function (db__$1,max_iter){
return (function minikusari$tutorial3$infer_$_iter__27030(s__27031){
return (new cljs.core.LazySeq(null,((function (db__$1,max_iter){
return (function (){
var s__27031__$1 = s__27031;
while(true){
var temp__5720__auto__ = cljs.core.seq(s__27031__$1);
if(temp__5720__auto__){
var xs__6277__auto__ = temp__5720__auto__;
var rule = cljs.core.first(xs__6277__auto__);
var iterys__4525__auto__ = ((function (s__27031__$1,db__$1,max_iter,rule,xs__6277__auto__,temp__5720__auto__){
return (function minikusari$tutorial3$infer_$_iter__27030_$_iter__27032(s__27033){
return (new cljs.core.LazySeq(null,((function (s__27031__$1,db__$1,max_iter,rule,xs__6277__auto__,temp__5720__auto__){
return (function (){
var s__27033__$1 = s__27033;
while(true){
var temp__5720__auto____$1 = cljs.core.seq(s__27033__$1);
if(temp__5720__auto____$1){
var s__27033__$2 = temp__5720__auto____$1;
if(cljs.core.chunked_seq_QMARK_(s__27033__$2)){
var c__4527__auto__ = cljs.core.chunk_first(s__27033__$2);
var size__4528__auto__ = cljs.core.count(c__4527__auto__);
var b__27035 = cljs.core.chunk_buffer(size__4528__auto__);
if((function (){var i__27034 = (0);
while(true){
if((i__27034 < size__4528__auto__)){
var tx = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4527__auto__,i__27034);
cljs.core.chunk_append(b__27035,tx);

var G__27036 = (i__27034 + (1));
i__27034 = G__27036;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__27035),minikusari$tutorial3$infer_$_iter__27030_$_iter__27032(cljs.core.chunk_rest(s__27033__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__27035),null);
}
} else {
var tx = cljs.core.first(s__27033__$2);
return cljs.core.cons(tx,minikusari$tutorial3$infer_$_iter__27030_$_iter__27032(cljs.core.rest(s__27033__$2)));
}
} else {
return null;
}
break;
}
});})(s__27031__$1,db__$1,max_iter,rule,xs__6277__auto__,temp__5720__auto__))
,null,null));
});})(s__27031__$1,db__$1,max_iter,rule,xs__6277__auto__,temp__5720__auto__))
;
var fs__4526__auto__ = cljs.core.seq(iterys__4525__auto__(minikusari.core.r(rule,db__$1)));
if(fs__4526__auto__){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fs__4526__auto__,minikusari$tutorial3$infer_$_iter__27030(cljs.core.rest(s__27031__$1)));
} else {
var G__27037 = cljs.core.rest(s__27031__$1);
s__27031__$1 = G__27037;
continue;
}
} else {
return null;
}
break;
}
});})(db__$1,max_iter))
,null,null));
});})(db__$1,max_iter))
;
return iter__4529__auto__(rules);
})();
if(cljs.core.empty_QMARK_(tx_data)){
return db__$1;
} else {
if((max_iter === (0))){
return db__$1;
} else {
var G__27038 = datascript.core.db_with(db__$1,tx_data);
var G__27039 = (max_iter - (1));
db__$1 = G__27038;
max_iter = G__27039;
continue;

}
}
break;
}
});
minikusari.tutorial3.rules = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_,cljs.core.cst$kw$action_SLASH_start,cljs.core.cst$sym$_QMARK_now,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_started_QMARK_,false], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_active_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_start_DASH_time], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_started_QMARK_,true], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_start_DASH_time,cljs.core.cst$sym$_QMARK_now], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_start_DASH_time,cljs.core.cst$sym$_QMARK_now], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_start_DASH_time,cljs.core.cst$sym$_QMARK_now], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Start",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_,cljs.core.cst$kw$action_SLASH_jump,cljs.core.cst$sym$_QMARK_now,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_active_QMARK_], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_active_QMARK_,true], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_start_DASH_time,cljs.core.cst$sym$_QMARK_now], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Jump",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_,cljs.core.cst$kw$action_SLASH_update_DASH_time,cljs.core.cst$sym$_QMARK_now,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_started_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_start_DASH_time,cljs.core.cst$sym$_QMARK_flappy_DASH_start_DASH_time], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_DASH_,cljs.core.cst$sym$_QMARK_now,cljs.core.cst$sym$_QMARK_flappy_DASH_start_DASH_time),cljs.core.cst$sym$_QMARK_time_DASH_delta], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_current_DASH_time,cljs.core.cst$sym$_QMARK_now], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_time_DASH_delta,cljs.core.cst$sym$_QMARK_time_DASH_delta], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Time update",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_time_DASH_delta,cljs.core.cst$sym$_QMARK_time_DASH_delta,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_active_QMARK_,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_cur_DASH_y,cljs.core.cst$sym$_QMARK_cur_DASH_y], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$new_DASH_y,cljs.core.cst$sym$_QMARK_time_DASH_delta,cljs.core.cst$sym$_QMARK_cur_DASH_y),cljs.core.cst$sym$_QMARK_new_DASH_y], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_cur_DASH_y,cljs.core.cst$sym$_QMARK_new_DASH_y], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Update active flappy",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx,cljs.core.cst$sym$new_DASH_y,minikusari.tutorial3.new_y], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_time_DASH_delta,cljs.core.cst$sym$_QMARK_time_DASH_delta,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_active_QMARK_,false], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$sine_DASH_wave,cljs.core.cst$sym$_QMARK_time_DASH_delta),cljs.core.cst$sym$_QMARK_cur_DASH_y], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_cur_DASH_y,cljs.core.cst$sym$_QMARK_cur_DASH_y], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Update inactive flappy",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx,cljs.core.cst$sym$sine_DASH_wave,minikusari.tutorial3.sine_wave], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_current_DASH_time,cljs.core.cst$sym$_QMARK_current_DASH_time,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_start_DASH_x,cljs.core.cst$sym$_QMARK_start_DASH_x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_start_DASH_time,cljs.core.cst$sym$_QMARK_start_DASH_time], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$curr_DASH_pillar_DASH_pos,cljs.core.cst$sym$_QMARK_current_DASH_time,cljs.core.cst$sym$_QMARK_start_DASH_x,cljs.core.cst$sym$_QMARK_start_DASH_time),cljs.core.cst$sym$_QMARK_new_DASH_x], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,cljs.core.cst$sym$_QMARK_new_DASH_x], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Update pillars",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx,cljs.core.cst$sym$curr_DASH_pillar_DASH_pos,minikusari.tutorial3.curr_pillar_pos], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,cljs.core.cst$sym$_QMARK_cur_DASH_x,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT__EQ_,cljs.core.cst$sym$_QMARK_cur_DASH_x,cljs.core.cst$sym$pillar_DASH_width)], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_retractEntity,cljs.core.cst$sym$_QMARK_pillar], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Delete pillar",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx,cljs.core.cst$sym$pillar_DASH_width,(- minikusari.tutorial3.pillar_width)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,cljs.core.cst$sym$_QMARK_cur_DASH_x,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_current_DASH_time,cljs.core.cst$sym$_QMARK_current_DASH_time], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$new_DASH_pillar_DASH_pos_DASH_x,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_pos_DASH_x], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$rand_DASH_height),cljs.core.cst$sym$_QMARK_height], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new-pillar",cljs.core.cst$kw$pillar_SLASH_start_DASH_time,cljs.core.cst$sym$_QMARK_current_DASH_time], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new-pillar",cljs.core.cst$kw$pillar_SLASH_start_DASH_x,cljs.core.cst$sym$_QMARK_pos_DASH_x], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new-pillar",cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,cljs.core.cst$sym$_QMARK_pos_DASH_x], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new-pillar",cljs.core.cst$kw$pillar_SLASH_upper_DASH_height,cljs.core.cst$sym$_QMARK_height], null),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Add pillar",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx,cljs.core.cst$kw$tx_SLASH_hack,cljs.core.cst$sym$_QMARK_count], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx,cljs.core.cst$sym$rand_DASH_height,minikusari.tutorial3.rand_height,cljs.core.cst$sym$pillars_DASH_in_DASH_world,minikusari.tutorial3.pillars_in_world,cljs.core.cst$sym$new_DASH_pillar_DASH_pos_DASH_x,minikusari.tutorial3.new_pillar_start_x], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,cljs.core.cst$sym$_QMARK_cur_DASH_x,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_pillar,cljs.core.cst$kw$pillar_SLASH_upper_DASH_height,cljs.core.cst$sym$_QMARK_height], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_started_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_flappy,cljs.core.cst$kw$flappy_SLASH_cur_DASH_y,cljs.core.cst$sym$_QMARK_cur_DASH_y], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$collision_QMARK_,cljs.core.cst$sym$_QMARK_cur_DASH_x,cljs.core.cst$sym$_QMARK_height,cljs.core.cst$sym$_QMARK_cur_DASH_y)], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_started_QMARK_,false], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Check collision",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx,cljs.core.cst$sym$collision_QMARK_,minikusari.tutorial3.collision_QMARK_], null)], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_current_DASH_time,cljs.core.cst$sym$_QMARK_current_DASH_time,cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_start_DASH_time,cljs.core.cst$sym$_QMARK_start_DASH_time], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_score,cljs.core.cst$sym$_QMARK_old_DASH_score], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$calc_DASH_score,cljs.core.cst$sym$_QMARK_current_DASH_time,cljs.core.cst$sym$_QMARK_start_DASH_time),cljs.core.cst$sym$_QMARK_new_DASH_score], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_GT_,cljs.core.cst$sym$_QMARK_new_DASH_score,cljs.core.cst$sym$_QMARK_old_DASH_score)], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$sym$_QMARK_game,cljs.core.cst$kw$game_SLASH_score,cljs.core.cst$sym$_QMARK_new_DASH_score], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"Update score",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx,cljs.core.cst$sym$calc_DASH_score,minikusari.tutorial3.calc_score], null)], null)], null);
minikusari.tutorial3.ui = (function minikusari$tutorial3$ui(p__27040,p__27041,pillar_list,p__27042){
var map__27043 = p__27040;
var map__27043__$1 = (((((!((map__27043 == null))))?(((((map__27043.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__27043.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27043):map__27043);
var started_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27043__$1,cljs.core.cst$kw$game_SLASH_started_QMARK_);
var current_time = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27043__$1,cljs.core.cst$kw$game_SLASH_current_DASH_time);
var score = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27043__$1,cljs.core.cst$kw$game_SLASH_score);
var border_pos = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27043__$1,cljs.core.cst$kw$game_SLASH_border_DASH_pos);
var map__27044 = p__27041;
var map__27044__$1 = (((((!((map__27044 == null))))?(((((map__27044.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__27044.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27044):map__27044);
var cur_y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27044__$1,cljs.core.cst$kw$flappy_SLASH_cur_DASH_y);
var map__27045 = p__27042;
var map__27045__$1 = (((((!((map__27045 == null))))?(((((map__27045.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__27045.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27045):map__27045);
var start_game = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27045__$1,cljs.core.cst$kw$start_DASH_game);
var jump = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27045__$1,cljs.core.cst$kw$jump);
return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$style,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$position,cljs.core.cst$kw$relative,cljs.core.cst$kw$width,(480),cljs.core.cst$kw$height,(640),cljs.core.cst$kw$overflow,cljs.core.cst$kw$hidden,cljs.core.cst$kw$margin,"0px auto",cljs.core.cst$kw$background,"rgb(112, 197, 206) url(imgs/background.png) no-repeat left bottom"], null),cljs.core.cst$kw$onMouseDown,(function (e){
e.preventDefault();

if(cljs.core.truth_(jump)){
return (jump.cljs$core$IFn$_invoke$arity$0 ? jump.cljs$core$IFn$_invoke$arity$0() : jump.call(null));
} else {
return null;
}
})], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$h1,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$color,cljs.core.cst$kw$text_DASH_align,cljs.core.cst$kw$font_DASH_size,cljs.core.cst$kw$top,cljs.core.cst$kw$width,cljs.core.cst$kw$z_DASH_index,cljs.core.cst$kw$text_DASH_shadow,cljs.core.cst$kw$position,cljs.core.cst$kw$font_DASH_family,cljs.core.cst$kw$left],[cljs.core.cst$kw$white,cljs.core.cst$kw$center,(58),(13),(300),(5),"-4px 0 black, 0 4px black, 4px 0 black, 0 -4px black",cljs.core.cst$kw$absolute,cljs.core.cst$kw$monospace,(90)])], null),score], null),((cljs.core.not(started_QMARK_))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$a,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$style,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$border_DASH_right,cljs.core.cst$kw$color,cljs.core.cst$kw$text_DASH_align,cljs.core.cst$kw$font_DASH_size,cljs.core.cst$kw$top,cljs.core.cst$kw$background_DASH_color,cljs.core.cst$kw$width,cljs.core.cst$kw$z_DASH_index,cljs.core.cst$kw$padding,cljs.core.cst$kw$text_DASH_shadow,cljs.core.cst$kw$position,cljs.core.cst$kw$font_DASH_family,cljs.core.cst$kw$border_DASH_bottom,cljs.core.cst$kw$left],["3px solid rgb(84,56,71)","rgb(244,176,36)",cljs.core.cst$kw$center,(40),(363),cljs.core.cst$kw$white,(200),(5),"1px 10px","-3px 0 black, 0 3px black, 3px 0 black, 0 -3px black",cljs.core.cst$kw$absolute,cljs.core.cst$kw$monospace,"3px solid rgb(84,56,71)",(128)]),cljs.core.cst$kw$onClick,(function (){var or__4126__auto__ = start_game;
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return cljs.core.identity;
}
})()], null),(((current_time > (0)))?"RESTART":"START")], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$span], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,(function (){var iter__4529__auto__ = (function minikusari$tutorial3$ui_$_iter__27049(s__27050){
return (new cljs.core.LazySeq(null,(function (){
var s__27050__$1 = s__27050;
while(true){
var temp__5720__auto__ = cljs.core.seq(s__27050__$1);
if(temp__5720__auto__){
var s__27050__$2 = temp__5720__auto__;
if(cljs.core.chunked_seq_QMARK_(s__27050__$2)){
var c__4527__auto__ = cljs.core.chunk_first(s__27050__$2);
var size__4528__auto__ = cljs.core.count(c__4527__auto__);
var b__27052 = cljs.core.chunk_buffer(size__4528__auto__);
if((function (){var i__27051 = (0);
while(true){
if((i__27051 < size__4528__auto__)){
var map__27053 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4527__auto__,i__27051);
var map__27053__$1 = (((((!((map__27053 == null))))?(((((map__27053.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__27053.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27053):map__27053);
var cur_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27053__$1,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x);
var upper_height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27053__$1,cljs.core.cst$kw$pillar_SLASH_upper_DASH_height);
var lower_height = ((minikusari.tutorial3.bottom_y - upper_height) - minikusari.tutorial3.pillar_gap);
cljs.core.chunk_append(b__27052,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$top,cljs.core.cst$kw$width,cljs.core.cst$kw$background_DASH_image,cljs.core.cst$kw$right,cljs.core.cst$kw$position,cljs.core.cst$kw$background_DASH_repeat,cljs.core.cst$kw$background_DASH_position,cljs.core.cst$kw$height,cljs.core.cst$kw$left],[(0),(86),"url(imgs/upper-pillar-head.png), url(imgs/pillar-bkg.png)",(150),cljs.core.cst$kw$absolute,"no-repeat, repeat-y","left bottom, left bottom",upper_height,cur_x])], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$bottom,cljs.core.cst$kw$width,cljs.core.cst$kw$background_DASH_image,cljs.core.cst$kw$right,cljs.core.cst$kw$position,cljs.core.cst$kw$background_DASH_repeat,cljs.core.cst$kw$background_DASH_position,cljs.core.cst$kw$height,cljs.core.cst$kw$left],[(80),(86),"url(imgs/lower-pillar-head.png), url(imgs/pillar-bkg.png)",(150),cljs.core.cst$kw$absolute,"no-repeat, repeat-y","left top, left top",lower_height,cur_x])], null)], null)], null));

var G__27057 = (i__27051 + (1));
i__27051 = G__27057;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__27052),minikusari$tutorial3$ui_$_iter__27049(cljs.core.chunk_rest(s__27050__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__27052),null);
}
} else {
var map__27055 = cljs.core.first(s__27050__$2);
var map__27055__$1 = (((((!((map__27055 == null))))?(((((map__27055.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__27055.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27055):map__27055);
var cur_x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27055__$1,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x);
var upper_height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27055__$1,cljs.core.cst$kw$pillar_SLASH_upper_DASH_height);
var lower_height = ((minikusari.tutorial3.bottom_y - upper_height) - minikusari.tutorial3.pillar_gap);
return cljs.core.cons(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$top,cljs.core.cst$kw$width,cljs.core.cst$kw$background_DASH_image,cljs.core.cst$kw$right,cljs.core.cst$kw$position,cljs.core.cst$kw$background_DASH_repeat,cljs.core.cst$kw$background_DASH_position,cljs.core.cst$kw$height,cljs.core.cst$kw$left],[(0),(86),"url(imgs/upper-pillar-head.png), url(imgs/pillar-bkg.png)",(150),cljs.core.cst$kw$absolute,"no-repeat, repeat-y","left bottom, left bottom",upper_height,cur_x])], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$bottom,cljs.core.cst$kw$width,cljs.core.cst$kw$background_DASH_image,cljs.core.cst$kw$right,cljs.core.cst$kw$position,cljs.core.cst$kw$background_DASH_repeat,cljs.core.cst$kw$background_DASH_position,cljs.core.cst$kw$height,cljs.core.cst$kw$left],[(80),(86),"url(imgs/lower-pillar-head.png), url(imgs/pillar-bkg.png)",(150),cljs.core.cst$kw$absolute,"no-repeat, repeat-y","left top, left top",lower_height,cur_x])], null)], null)], null),minikusari$tutorial3$ui_$_iter__27049(cljs.core.rest(s__27050__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4529__auto__(pillar_list);
})()], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$position,cljs.core.cst$kw$absolute,cljs.core.cst$kw$background,"transparent url(imgs/flappy-base.png) no-repeat top left",cljs.core.cst$kw$top,cur_y,cljs.core.cst$kw$left,(212),cljs.core.cst$kw$width,(57),cljs.core.cst$kw$height,(41)], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$position,cljs.core.cst$kw$absolute,cljs.core.cst$kw$height,(10),cljs.core.cst$kw$width,(480),cljs.core.cst$kw$top,(567),cljs.core.cst$kw$background,"transparent url(imgs/scrolling-border.png) repeat-x top left",cljs.core.cst$kw$background_DASH_position_DASH_x,border_pos], null)], null)], null)], null);
});
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$card], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"card",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,devcards.core.markdown__GT_react.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["# Meet flappy, he needs some help to fly","> Key concepts: rule `args`, rules that execute only when something changed, `:db/current-tx` metadata","In this classic flappy bird game, we're going to see how our rule engine can derive a new game state based on user input"], 0)),cljs.core.cst$kw$initial_DASH_data,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$options,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$heading,false], null),devcards.core.assert_options_map(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$hide_DASH_border,true], null))], 0))], null));
})], null));
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$flappy_DASH_static], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"flappy-static",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,(function (data_atom){
var vec__27058 = cljs.core.deref(data_atom);
var game = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27058,(0),null);
var flappy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27058,(1),null);
var pillar_list = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27058,(2),null);
return sablono.interpreter.interpret(minikusari.tutorial3.ui(game,flappy,pillar_list,cljs.core.PersistentArrayMap.EMPTY));
}),cljs.core.cst$kw$initial_DASH_data,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$game_SLASH_started_QMARK_,true,cljs.core.cst$kw$game_SLASH_score,(1),cljs.core.cst$kw$game_SLASH_border_DASH_pos,(0)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$flappy_SLASH_cur_DASH_y,minikusari.tutorial3.start_y], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$pillar_SLASH_cur_DASH_x,(350),cljs.core.cst$kw$pillar_SLASH_upper_DASH_height,(200)], null)], null)], null),cljs.core.cst$kw$options,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$frame,false,cljs.core.cst$kw$inspect_DASH_data,true], null)], null));
})], null));
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$card], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"card",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,devcards.core.markdown__GT_react.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["## Not so fast, flappy.\n\n  If you recall our rules are pure data. How the heck are we supposed to calculate gravity based games and invoke complex Math functions?\n\n  On the JVM it's not a big deal, because we can call functions directly in our binding vectors.\n\n  The following is perfectly valid code in clj",["\n```clojure\n",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devcards.util.utils.pprint_code(cljs.core.list(cljs.core.cst$sym$defn,cljs.core.cst$sym$my_DASH_fn,cljs.core.PersistentVector.EMPTY,cljs.core.list(cljs.core.cst$sym$rand_DASH_int,(5))))),"\n```\n"].join(''),["\n```clojure\n",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devcards.util.utils.pprint_code(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$person_SLASH_age,cljs.core.cst$sym$_QMARK_age], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$my$ns_SLASH_my_DASH_fn),cljs.core.cst$sym$_QMARK_rand], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_age,cljs.core.cst$sym$_QMARK_rand)], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_retractEntity,cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$person_SLASH_age,cljs.core.cst$sym$_QMARK_age], null)], null)], null))),"\n```\n"].join(''),"You can even call functions that rely on the state of the database itself by passing the implicit db reference `$`",["\n```clojure\n",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devcards.util.utils.pprint_code(cljs.core.list(cljs.core.cst$sym$defn,cljs.core.cst$sym$count_DASH_people,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$db], null),cljs.core.list(cljs.core.cst$sym$d_SLASH_q,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,cljs.core.list(cljs.core.cst$sym$count,cljs.core.cst$sym$_QMARK_e),cljs.core.cst$sym$_DOT_,cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$person_SLASH_name], null)], null)),cljs.core.cst$sym$db)))),"\n```\n"].join(''),["\n```clojure\n",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devcards.util.utils.pprint_code(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$my$ns_SLASH_count_DASH_people,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(5))], null)], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new person",cljs.core.cst$kw$person_SLASH_name,"Johnny"], null)], null)], null))),"\n```\n"].join(''),"Unfortunately this doesn't work in cljs because we're missing the ability to `resolve` symbols that refer to functions.","We need to introduce a new concept. Remember the code that interprets our rules",["\n```clojure\n","(defn r\n  \"Tries to match rule against db\n  Returns tx-data or empty list if rule does not match\"\n  [{:keys [when then args]} db]\n  (let [syms (for [row then el row :when (symbol? el)] el)\n        results (apply d/q {:find syms :in (cons '$ (keys args)) :where when} db (vals args))]\n    (for [match results tx then]\n      (let [swaps (zipmap syms match)\n            f (fn [x] (if (coll? x) x (get swaps x x)))]\n        (walk/postwalk f tx)))))","\n```\n"].join(''),"You can optionally specify an `args` key. This is a map of symbols to values or functions, and that allows you to refer to those symbols in your `when` clause, similarly to how an `in` clause works for queries.","Let's see this in action below.",["\n```clojure\n","(def flappy-db\n  (d/db-with\n    (d/empty-db)\n    [{:game/started?   false\n      :game/score      0\n      :game/start-time 0\n      :game/border-pos 0}\n     {:flappy/active?    false\n      :flappy/start-time 0\n      :flappy/cur-y      start-y}\n     {:pillar/start-time   0\n      :pillar/start-x      900\n      :pillar/cur-x        900\n      :pillar/upper-height 200}]))","\n```\n"].join(''),["\n```clojure\n","(defn pillars-in-world [db]\n  (d/q '[:find (count ?e) .\n         :in $ pillar-width\n         :where\n         [?e :pillar/cur-x ?cur-x]\n         [(> ?cur-x pillar-width)]]\n       db (- pillar-width)))","\n```\n"].join('')], 0)),cljs.core.cst$kw$initial_DASH_data,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$options,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$heading,false], null),devcards.core.assert_options_map(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$hide_DASH_border,true], null))], 0))], null));
})], null));
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$args_DASH_test], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"args-test",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,devcards.core.test_card.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["You can pass arguments to the rule execution. Note that you need to move the quote next to each vector, because args needs to be unquoted"], 0));

try{try{var values__22335__auto__ = (new cljs.core.List(null,minikusari.core.r(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$pillars_DASH_in_DASH_world,minikusari.tutorial3.pillars_in_world], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,cljs.core.cst$sym$_QMARK_count], null)], null)], null),minikusari.tutorial3.flappy_db),(new cljs.core.List(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,(1)], null)], null),null,(1),null)),(2),null));
var result__22336__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,values__22335__auto__);
if(cljs.core.truth_(result__22336__auto__)){
var G__27063_27069 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",53,cljs.core.cst$kw$pass,9,336,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$pillars_DASH_in_DASH_world),cljs.core.cst$sym$pillars_DASH_in_DASH_world], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,cljs.core.cst$sym$_QMARK_count], null)], null))], null),cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,(1)], null)], null)),341,cljs.core.cons(cljs.core.cst$sym$_EQ_,values__22335__auto__),null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27063_27069) : cljs.test.report.call(null,G__27063_27069));
} else {
var G__27064_27070 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",53,cljs.core.cst$kw$fail,9,336,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$pillars_DASH_in_DASH_world),cljs.core.cst$sym$pillars_DASH_in_DASH_world], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,cljs.core.cst$sym$_QMARK_count], null)], null))], null),cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,(1)], null)], null)),341,(new cljs.core.List(null,cljs.core.cst$sym$not,(new cljs.core.List(null,cljs.core.cons(cljs.core.cst$sym$_EQ_,values__22335__auto__),null,(1),null)),(2),null)),null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27064_27070) : cljs.test.report.call(null,G__27064_27070));
}

return result__22336__auto__;
}catch (e27061){var t__22386__auto__ = e27061;
var G__27062 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",53,cljs.core.cst$kw$error,9,336,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$pillars_DASH_in_DASH_world),cljs.core.cst$sym$pillars_DASH_in_DASH_world], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,cljs.core.cst$sym$_QMARK_count], null)], null))], null),cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,(1)], null)], null)),341,t__22386__auto__,null]);
return (cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27062) : cljs.test.report.call(null,G__27062));
}}finally {cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.rest);
}})], 0)),cljs.core.cst$kw$initial_DASH_data,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$options,cljs.core.PersistentArrayMap.EMPTY], null));
})], null));

minikusari.tutorial3.args_test = (function minikusari$tutorial3$args_test(){
return cljs.test.test_var(minikusari.tutorial3.args_test.cljs$lang$var);
});
minikusari.tutorial3.args_test.cljs$lang$test = (function (){
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["You can pass arguments to the rule execution. Note that you need to move the quote next to each vector, because args needs to be unquoted"], 0));

try{try{var values__22335__auto__ = (new cljs.core.List(null,minikusari.core.r(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$pillars_DASH_in_DASH_world,minikusari.tutorial3.pillars_in_world], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,cljs.core.cst$sym$_QMARK_count], null)], null)], null),minikusari.tutorial3.flappy_db),(new cljs.core.List(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,(1)], null)], null),null,(1),null)),(2),null));
var result__22336__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,values__22335__auto__);
if(cljs.core.truth_(result__22336__auto__)){
var G__27067_27071 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",53,cljs.core.cst$kw$pass,9,336,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$pillars_DASH_in_DASH_world),cljs.core.cst$sym$pillars_DASH_in_DASH_world], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,cljs.core.cst$sym$_QMARK_count], null)], null))], null),cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,(1)], null)], null)),341,cljs.core.cons(cljs.core.cst$sym$_EQ_,values__22335__auto__),null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27067_27071) : cljs.test.report.call(null,G__27067_27071));
} else {
var G__27068_27072 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",53,cljs.core.cst$kw$fail,9,336,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$pillars_DASH_in_DASH_world),cljs.core.cst$sym$pillars_DASH_in_DASH_world], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,cljs.core.cst$sym$_QMARK_count], null)], null))], null),cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,(1)], null)], null)),341,(new cljs.core.List(null,cljs.core.cst$sym$not,(new cljs.core.List(null,cljs.core.cons(cljs.core.cst$sym$_EQ_,values__22335__auto__),null,(1),null)),(2),null)),null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27068_27072) : cljs.test.report.call(null,G__27068_27072));
}

return result__22336__auto__;
}catch (e27065){var t__22386__auto__ = e27065;
var G__27066 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",53,cljs.core.cst$kw$error,9,336,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pillars_DASH_in_DASH_world,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_count], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$_LT_,cljs.core.cst$sym$_QMARK_count,(3))], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$pillars_DASH_in_DASH_world),cljs.core.cst$sym$pillars_DASH_in_DASH_world], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,cljs.core.cst$sym$_QMARK_count], null)], null))], null),cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,"new pillar",cljs.core.cst$kw$pillar_SLASH_index,(1)], null)], null)),341,t__22386__auto__,null]);
return (cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27066) : cljs.test.report.call(null,G__27066));
}}finally {cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.rest);
}});

(minikusari.tutorial3.args_test.cljs$lang$var = new cljs.core.Var(function(){return minikusari.tutorial3.args_test;},cljs.core.cst$sym$minikusari$tutorial3_SLASH_args_DASH_test,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$minikusari$tutorial3,cljs.core.cst$sym$args_DASH_test,"/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",19,1,334,334,cljs.core.List.EMPTY,null,(cljs.core.truth_(minikusari.tutorial3.args_test)?minikusari.tutorial3.args_test.cljs$lang$test:null)])));
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$card], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"card",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,devcards.core.markdown__GT_react.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["We will need `args` not only to calculate complex values, but also to check what has been recently updated.","In most of the examples we've seen before it was fine to re-run some rules.","But in something as complex as flying a bird we only want to trigger rules when certain things have just been updated.","Thankfully, Datascript stores the transaction number for each datom, so we could just check if the tx at the end of the eavt vector is the latest one in the db."], 0)),cljs.core.cst$kw$initial_DASH_data,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$options,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$heading,false], null),devcards.core.assert_options_map(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$hide_DASH_border,true], null))], 0))], null));
})], null));
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$max_DASH_tx_DASH_test], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"max-tx-test",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,devcards.core.test_card.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["You can observe max-tx from a Datascript db by simply getting it by key"], 0));

try{try{var values__22335__auto__ = (new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(minikusari.tutorial3.flappy_db,cljs.core.cst$kw$max_DASH_tx),(new cljs.core.List(null,(536870913),null,(1),null)),(2),null));
var result__22336__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,values__22335__auto__);
if(cljs.core.truth_(result__22336__auto__)){
var G__27075_27097 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",46,cljs.core.cst$kw$pass,9,354,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$get,cljs.core.cst$sym$flappy_DASH_db,cljs.core.cst$kw$max_DASH_tx),(536870913)),354,cljs.core.cons(cljs.core.cst$sym$_EQ_,values__22335__auto__),null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27075_27097) : cljs.test.report.call(null,G__27075_27097));
} else {
var G__27076_27098 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",46,cljs.core.cst$kw$fail,9,354,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$get,cljs.core.cst$sym$flappy_DASH_db,cljs.core.cst$kw$max_DASH_tx),(536870913)),354,(new cljs.core.List(null,cljs.core.cst$sym$not,(new cljs.core.List(null,cljs.core.cons(cljs.core.cst$sym$_EQ_,values__22335__auto__),null,(1),null)),(2),null)),null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27076_27098) : cljs.test.report.call(null,G__27076_27098));
}

return result__22336__auto__;
}catch (e27073){var t__22386__auto__ = e27073;
var G__27074 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",46,cljs.core.cst$kw$error,9,354,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$get,cljs.core.cst$sym$flappy_DASH_db,cljs.core.cst$kw$max_DASH_tx),(536870913)),354,t__22386__auto__,null]);
return (cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27074) : cljs.test.report.call(null,G__27074));
}}finally {cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.rest);
}}),(function (){
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["You can match rules against recently changed datoms by matching it with max-tx"], 0));

try{try{var value__22339__auto__ = (function (){var rule = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)], null);
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(minikusari.core.r(rule,minikusari.tutorial3.flappy_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,(536870913)], null)], null));
})();
if(value__22339__auto__){
var G__27079_27099 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",90,cljs.core.cst$kw$pass,9,356,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,(536870913)], null)], null))),361,value__22339__auto__,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27079_27099) : cljs.test.report.call(null,G__27079_27099));
} else {
var G__27080_27100 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",90,cljs.core.cst$kw$fail,9,356,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,(536870913)], null)], null))),361,value__22339__auto__,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27080_27100) : cljs.test.report.call(null,G__27080_27100));
}

return value__22339__auto__;
}catch (e27077){var t__22386__auto__ = e27077;
var G__27078 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",90,cljs.core.cst$kw$error,9,356,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,(536870913)], null)], null))),361,t__22386__auto__,null]);
return (cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27078) : cljs.test.report.call(null,G__27078));
}}finally {cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.rest);
}}),(function (){
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["If something else changed in the meantime the same rule will not trigger again"], 0));

try{try{var value__22339__auto__ = (function (){var rule = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)], null);
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(minikusari.core.r(rule,datascript.core.db_with(minikusari.tutorial3.flappy_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$some,cljs.core.cst$kw$data], null)], null))),cljs.core.PersistentVector.EMPTY);
})();
if(value__22339__auto__){
var G__27083_27101 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",18,cljs.core.cst$kw$pass,9,363,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.list(cljs.core.cst$sym$d_SLASH_db_DASH_with,cljs.core.cst$sym$flappy_DASH_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$some,cljs.core.cst$kw$data], null)], null))),cljs.core.PersistentVector.EMPTY)),368,value__22339__auto__,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27083_27101) : cljs.test.report.call(null,G__27083_27101));
} else {
var G__27084_27102 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",18,cljs.core.cst$kw$fail,9,363,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.list(cljs.core.cst$sym$d_SLASH_db_DASH_with,cljs.core.cst$sym$flappy_DASH_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$some,cljs.core.cst$kw$data], null)], null))),cljs.core.PersistentVector.EMPTY)),368,value__22339__auto__,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27084_27102) : cljs.test.report.call(null,G__27084_27102));
}

return value__22339__auto__;
}catch (e27081){var t__22386__auto__ = e27081;
var G__27082 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",18,cljs.core.cst$kw$error,9,363,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.list(cljs.core.cst$sym$d_SLASH_db_DASH_with,cljs.core.cst$sym$flappy_DASH_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$some,cljs.core.cst$kw$data], null)], null))),cljs.core.PersistentVector.EMPTY)),368,t__22386__auto__,null]);
return (cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27082) : cljs.test.report.call(null,G__27082));
}}finally {cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.rest);
}})], 0)),cljs.core.cst$kw$initial_DASH_data,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$options,cljs.core.PersistentArrayMap.EMPTY], null));
})], null));

minikusari.tutorial3.max_tx_test = (function minikusari$tutorial3$max_tx_test(){
return cljs.test.test_var(minikusari.tutorial3.max_tx_test.cljs$lang$var);
});
minikusari.tutorial3.max_tx_test.cljs$lang$test = (function (){
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["You can observe max-tx from a Datascript db by simply getting it by key"], 0));

try{try{var values__22335__auto___27103 = (new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(minikusari.tutorial3.flappy_db,cljs.core.cst$kw$max_DASH_tx),(new cljs.core.List(null,(536870913),null,(1),null)),(2),null));
var result__22336__auto___27104 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,values__22335__auto___27103);
if(cljs.core.truth_(result__22336__auto___27104)){
var G__27087_27105 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",46,cljs.core.cst$kw$pass,9,354,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$get,cljs.core.cst$sym$flappy_DASH_db,cljs.core.cst$kw$max_DASH_tx),(536870913)),354,cljs.core.cons(cljs.core.cst$sym$_EQ_,values__22335__auto___27103),null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27087_27105) : cljs.test.report.call(null,G__27087_27105));
} else {
var G__27088_27106 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",46,cljs.core.cst$kw$fail,9,354,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$get,cljs.core.cst$sym$flappy_DASH_db,cljs.core.cst$kw$max_DASH_tx),(536870913)),354,(new cljs.core.List(null,cljs.core.cst$sym$not,(new cljs.core.List(null,cljs.core.cons(cljs.core.cst$sym$_EQ_,values__22335__auto___27103),null,(1),null)),(2),null)),null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27088_27106) : cljs.test.report.call(null,G__27088_27106));
}

}catch (e27085){var t__22386__auto___27107 = e27085;
var G__27086_27108 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",46,cljs.core.cst$kw$error,9,354,cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$get,cljs.core.cst$sym$flappy_DASH_db,cljs.core.cst$kw$max_DASH_tx),(536870913)),354,t__22386__auto___27107,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27086_27108) : cljs.test.report.call(null,G__27086_27108));
}}finally {cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.rest);
}
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["You can match rules against recently changed datoms by matching it with max-tx"], 0));

try{try{var value__22339__auto___27109 = (function (){var rule = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)], null);
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(minikusari.core.r(rule,minikusari.tutorial3.flappy_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,(536870913)], null)], null));
})();
if(value__22339__auto___27109){
var G__27091_27110 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",90,cljs.core.cst$kw$pass,9,356,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,(536870913)], null)], null))),361,value__22339__auto___27109,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27091_27110) : cljs.test.report.call(null,G__27091_27110));
} else {
var G__27092_27111 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",90,cljs.core.cst$kw$fail,9,356,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,(536870913)], null)], null))),361,value__22339__auto___27109,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27092_27111) : cljs.test.report.call(null,G__27092_27111));
}

}catch (e27089){var t__22386__auto___27112 = e27089;
var G__27090_27113 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",90,cljs.core.cst$kw$error,9,356,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.cst$sym$flappy_DASH_db),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,(536870913)], null)], null))),361,t__22386__auto___27112,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27090_27113) : cljs.test.report.call(null,G__27090_27113));
}}finally {cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.rest);
}
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["If something else changed in the meantime the same rule will not trigger again"], 0));

try{try{var value__22339__auto__ = (function (){var rule = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)], null);
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(minikusari.core.r(rule,datascript.core.db_with(minikusari.tutorial3.flappy_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$some,cljs.core.cst$kw$data], null)], null))),cljs.core.PersistentVector.EMPTY);
})();
if(value__22339__auto__){
var G__27095_27114 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",18,cljs.core.cst$kw$pass,9,363,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.list(cljs.core.cst$sym$d_SLASH_db_DASH_with,cljs.core.cst$sym$flappy_DASH_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$some,cljs.core.cst$kw$data], null)], null))),cljs.core.PersistentVector.EMPTY)),368,value__22339__auto__,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27095_27114) : cljs.test.report.call(null,G__27095_27114));
} else {
var G__27096_27115 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",18,cljs.core.cst$kw$fail,9,363,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.list(cljs.core.cst$sym$d_SLASH_db_DASH_with,cljs.core.cst$sym$flappy_DASH_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$some,cljs.core.cst$kw$data], null)], null))),cljs.core.PersistentVector.EMPTY)),368,value__22339__auto__,null]);
(cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27096_27115) : cljs.test.report.call(null,G__27096_27115));
}

return value__22339__auto__;
}catch (e27093){var t__22386__auto__ = e27093;
var G__27094 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$type,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$expected,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$actual,cljs.core.cst$kw$message],["/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",18,cljs.core.cst$kw$error,9,363,cljs.core.list(cljs.core.cst$sym$let,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rule,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$when,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$max_DASH_tx,cljs.core.cst$sym$$),cljs.core.cst$sym$_QMARK_max_DASH_tx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_,false,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null)),cljs.core.cst$kw$args,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.list(cljs.core.cst$sym$quote,cljs.core.cst$sym$max_DASH_tx),cljs.core.cst$kw$max_DASH_tx], null),cljs.core.cst$kw$then,cljs.core.list(cljs.core.cst$sym$quote,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$db_SLASH_add,cljs.core.cst$kw$db_SLASH_current_DASH_tx,cljs.core.cst$kw$db_SLASH_doc,"The game begins",cljs.core.cst$kw$tx_SLASH_trigger,cljs.core.cst$sym$_QMARK_max_DASH_tx], null)], null))], null)], null),cljs.core.list(cljs.core.cst$sym$_EQ_,cljs.core.list(cljs.core.cst$sym$r,cljs.core.cst$sym$rule,cljs.core.list(cljs.core.cst$sym$d_SLASH_db_DASH_with,cljs.core.cst$sym$flappy_DASH_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$some,cljs.core.cst$kw$data], null)], null))),cljs.core.PersistentVector.EMPTY)),368,t__22386__auto__,null]);
return (cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__27094) : cljs.test.report.call(null,G__27094));
}}finally {cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$testing_DASH_contexts], null),cljs.core.rest);
}});

(minikusari.tutorial3.max_tx_test.cljs$lang$var = new cljs.core.Var(function(){return minikusari.tutorial3.max_tx_test;},cljs.core.cst$sym$minikusari$tutorial3_SLASH_max_DASH_tx_DASH_test,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$minikusari$tutorial3,cljs.core.cst$sym$max_DASH_tx_DASH_test,"/Users/frankie/Documents/minikusari/devcards/src/minikusari/tutorial3.cljs",21,1,352,352,cljs.core.List.EMPTY,null,(cljs.core.truth_(minikusari.tutorial3.max_tx_test)?minikusari.tutorial3.max_tx_test.cljs$lang$test:null)])));
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$card], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"card",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,devcards.core.markdown__GT_react.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["## Ready, set, fly","The eagle eyed of you might have spotted an interesting thing in the previous example: we're using `:db/current-tx` to attach metadata on the current transaction, so it's easier to see which rule was executed. This is nice, we're going to use it.","We pretty much have all the ingredients now. Let's cook something up.","There are only two user inputs the game takes: `start` and `jump` and one automatic new fact: `time-update`","All the other rules are to help us derive some more facts when we change the model: for example, when we update the game clock, some rules will take care of updating the gravity of the bird and others will move the pillars forward.",["\n```clojure\n","(def rules\n  [;; start\n   {:when '[[_ :action/start ?now ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?game :game/started? false]\n            [?flappy :flappy/active?]\n            [?pillar :pillar/start-time]]\n    :then '[[:db/add ?game :game/started? true]\n            [:db/add ?game :game/start-time ?now]\n            [:db/add ?flappy :flappy/start-time ?now]\n            [:db/add ?pillar :pillar/start-time ?now]\n            [:db/add :db/current-tx :db/doc \"Start\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx}}\n   ;; jump\n   {:when '[[_ :action/jump ?now ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?flappy :flappy/active?]]\n    :then '[[:db/add ?flappy :flappy/active? true]\n            [:db/add ?flappy :flappy/start-time ?now]\n            [:db/add :db/current-tx :db/doc \"Jump\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx}}\n   ;; time update\n   {:when '[[_ :action/update-time ?now ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?game :game/started?]\n            [?flappy :flappy/start-time ?flappy-start-time]\n            [(- ?now ?flappy-start-time) ?time-delta]]\n    :then '[[:db/add ?game :game/current-time ?now]\n            [:db/add ?game :game/time-delta ?time-delta]\n            [:db/add :db/current-tx :db/doc \"Time update\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx}}\n   ;; update flappy\n   ;; NB: we have some branching logic here: one rule for when flappy is active, one for when it is not active\n   {:when '[[?game :game/time-delta ?time-delta ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?flappy :flappy/active? true]\n            [?flappy :flappy/cur-y ?cur-y]\n            [(new-y ?time-delta ?cur-y) ?new-y]]\n    :then '[[:db/add ?flappy :flappy/cur-y ?new-y]\n            [:db/add :db/current-tx :db/doc \"Update active flappy\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx 'new-y new-y}}\n   {:when '[[?game :game/time-delta ?time-delta ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?flappy :flappy/active? false]\n            [(sine-wave ?time-delta) ?cur-y]]\n    :then '[[:db/add ?flappy :flappy/cur-y ?cur-y]\n            [:db/add :db/current-tx :db/doc \"Update inactive flappy\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx 'sine-wave sine-wave}}\n   ; update pillars\n   {:when '[[?game :game/current-time ?current-time ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?pillar :pillar/start-x ?start-x]\n            [?pillar :pillar/start-time ?start-time]\n            [(curr-pillar-pos ?current-time ?start-x ?start-time) ?new-x]]\n    :then '[[:db/add ?pillar :pillar/cur-x ?new-x]\n            [:db/add :db/current-tx :db/doc \"Update pillars\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx 'curr-pillar-pos curr-pillar-pos}}\n   ;; delete old pillars\n   {:when '[[?pillar :pillar/cur-x ?cur-x ?max-tx]\n            [(max-tx $) ?max-tx]\n            [(<= ?cur-x pillar-width)]]\n    :then '[[:db/retractEntity ?pillar]\n            [:db/add :db/current-tx :db/doc \"Delete pillar\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx 'pillar-width (- pillar-width)}}\n   ;; add new pillar\n   ;; NB: only trigger this when the pillar position has just been updated\n   {:when '[[?pillar :pillar/cur-x ?cur-x ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?game :game/current-time ?current-time]\n            [(pillars-in-world $) ?count]\n            [(new-pillar-pos-x $) ?pos-x]\n            [(< ?count 3)]\n            [(rand-height) ?height]]\n    :then '[[:db/add \"new-pillar\" :pillar/start-time ?current-time]\n            [:db/add \"new-pillar\" :pillar/start-x ?pos-x]\n            [:db/add \"new-pillar\" :pillar/cur-x ?pos-x]\n            [:db/add \"new-pillar\" :pillar/upper-height ?height]\n            [:db/add :db/current-tx :db/doc \"Add pillar\" :tx/trigger ?max-tx :tx/hack ?count]]\n    :args {'max-tx :max-tx 'rand-height rand-height 'pillars-in-world pillars-in-world 'new-pillar-pos-x new-pillar-start-x}}\n   ;; check collisions\n   {:when '[[?pillar :pillar/cur-x ?cur-x ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?pillar :pillar/upper-height ?height]\n            [?game :game/started?]\n            [?flappy :flappy/cur-y ?cur-y]\n            [(collision? ?cur-x ?height ?cur-y)]]\n    :then '[[:db/add ?game :game/started? false]\n            [:db/add :db/current-tx :db/doc \"Check collision\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx 'collision? collision?}}\n   ;; update score\n   {:when '[[?game :game/current-time ?current-time ?max-tx]\n            [(max-tx $) ?max-tx]\n            [?game :game/start-time ?start-time]\n            [?game :game/score ?old-score]\n            [(calc-score ?current-time ?start-time) ?new-score]\n            [(> ?new-score ?old-score)]]\n    :then '[[:db/add ?game :game/score ?new-score]\n            [:db/add :db/current-tx :db/doc \"Update score\" :tx/trigger ?max-tx]]\n    :args {'max-tx :max-tx 'calc-score calc-score}}])","\n```\n"].join(''),"We need some tweak to our infer loop so we check for empty tx-data as a stopping condition",["\n```clojure\n","(defn infer\n  \"Returns a new db with all inferred facts and a list of tx-data.\n  Stops when no more rules apply or after 100 iterations\"\n  [db rules]\n  (loop [db db max-iter 100]\n    (let [tx-data (for [rule rules tx (r rule db)] tx)]\n      (cond\n        (empty? tx-data) db\n        (zero? max-iter) db\n        :else (recur (d/db-with db tx-data) (dec max-iter))))))","\n```\n"].join(''),"Have a go with the version below. Time is not updated automatically, you have to click to increase it.","You can use the arrows at the bottom of the card to rewind and replay state history"], 0)),cljs.core.cst$kw$initial_DASH_data,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$options,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$heading,false], null),devcards.core.assert_options_map(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$hide_DASH_border,true], null))], 0))], null));
})], null));
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$flappy_DASH_manual], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"flappy-manual",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,(function (data_atom){
var db = cljs.core.deref(data_atom);
var game = (function (){var G__27118 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,cljs.core.list(cljs.core.cst$sym$pull,cljs.core.cst$sym$_QMARK_e,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_STAR_], null)),cljs.core.cst$sym$_DOT_,cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_], null)], null);
var G__27119 = db;
return (datascript.core.q.cljs$core$IFn$_invoke$arity$2 ? datascript.core.q.cljs$core$IFn$_invoke$arity$2(G__27118,G__27119) : datascript.core.q.call(null,G__27118,G__27119));
})();
var flappy = (function (){var G__27120 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,cljs.core.list(cljs.core.cst$sym$pull,cljs.core.cst$sym$_QMARK_e,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_STAR_], null)),cljs.core.cst$sym$_DOT_,cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$flappy_SLASH_active_QMARK_], null)], null);
var G__27121 = db;
return (datascript.core.q.cljs$core$IFn$_invoke$arity$2 ? datascript.core.q.cljs$core$IFn$_invoke$arity$2(G__27120,G__27121) : datascript.core.q.call(null,G__27120,G__27121));
})();
var pillar_list = (function (){var G__27122 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pull,cljs.core.cst$sym$_QMARK_e,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_STAR_], null)),cljs.core.cst$sym$$$$], null),cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x], null)], null);
var G__27123 = db;
return (datascript.core.q.cljs$core$IFn$_invoke$arity$2 ? datascript.core.q.cljs$core$IFn$_invoke$arity$2(G__27122,G__27123) : datascript.core.q.call(null,G__27122,G__27123));
})();
var map__27117 = game;
var map__27117__$1 = (((((!((map__27117 == null))))?(((((map__27117.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__27117.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27117):map__27117);
var current_time = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27117__$1,cljs.core.cst$kw$game_SLASH_current_DASH_time);
var started_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27117__$1,cljs.core.cst$kw$game_SLASH_started_QMARK_);
var perform_action_BANG_ = (function (action){
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(data_atom,(function (p1__27116_SHARP_){
return minikusari.tutorial3.infer(datascript.core.db_with(p1__27116_SHARP_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [action], null)),minikusari.tutorial3.rules);
}));
});
var attrs27125 = minikusari.tutorial3.ui(game,flappy,pillar_list,cljs.core.PersistentArrayMap.EMPTY);
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(sablono.core.create_element,"div",((cljs.core.map_QMARK_(attrs27125))?sablono.interpreter.attributes(attrs27125):null),((cljs.core.map_QMARK_(attrs27125))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(started_QMARK_)?(function (){var G__27126 = "div";
var G__27127 = null;
var G__27128 = (function (){var G__27131 = "button";
var G__27132 = ({"onClick": (function (){
return cljs.core.reset_BANG_(data_atom,minikusari.tutorial3.infer(datascript.core.db_with(minikusari.tutorial3.flappy_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_start,(0)], null)], null)),minikusari.tutorial3.rules));
})});
var G__27133 = "Restart!";
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$3 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$3(G__27131,G__27132,G__27133) : sablono.core.create_element.call(null,G__27131,G__27132,G__27133));
})();
var G__27129 = (function (){var G__27134 = "button";
var G__27135 = ({"onClick": (function (){
return perform_action_BANG_(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_update_DASH_time,(current_time + (120))], null));
})});
var G__27136 = "Increase time";
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$3 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$3(G__27134,G__27135,G__27136) : sablono.core.create_element.call(null,G__27134,G__27135,G__27136));
})();
var G__27130 = (function (){var G__27137 = "button";
var G__27138 = ({"onClick": (function (){
return perform_action_BANG_(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_jump,(current_time + (60))], null));
})});
var G__27139 = "Jump";
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$3 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$3(G__27137,G__27138,G__27139) : sablono.core.create_element.call(null,G__27137,G__27138,G__27139));
})();
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$5 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$5(G__27126,G__27127,G__27128,G__27129,G__27130) : sablono.core.create_element.call(null,G__27126,G__27127,G__27128,G__27129,G__27130));
})():(function (){var G__27140 = "button";
var G__27141 = ({"onClick": (function (){
return cljs.core.reset_BANG_(data_atom,minikusari.tutorial3.infer(datascript.core.db_with(minikusari.tutorial3.flappy_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_start,(0)], null)], null)),minikusari.tutorial3.rules));
})});
var G__27142 = "Start!";
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$3 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$3(G__27140,G__27141,G__27142) : sablono.core.create_element.call(null,G__27140,G__27141,G__27142));
})())], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs27125),(cljs.core.truth_(started_QMARK_)?(function (){var G__27143 = "div";
var G__27144 = null;
var G__27145 = (function (){var G__27148 = "button";
var G__27149 = ({"onClick": (function (){
return cljs.core.reset_BANG_(data_atom,minikusari.tutorial3.infer(datascript.core.db_with(minikusari.tutorial3.flappy_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_start,(0)], null)], null)),minikusari.tutorial3.rules));
})});
var G__27150 = "Restart!";
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$3 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$3(G__27148,G__27149,G__27150) : sablono.core.create_element.call(null,G__27148,G__27149,G__27150));
})();
var G__27146 = (function (){var G__27151 = "button";
var G__27152 = ({"onClick": (function (){
return perform_action_BANG_(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_update_DASH_time,(current_time + (120))], null));
})});
var G__27153 = "Increase time";
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$3 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$3(G__27151,G__27152,G__27153) : sablono.core.create_element.call(null,G__27151,G__27152,G__27153));
})();
var G__27147 = (function (){var G__27154 = "button";
var G__27155 = ({"onClick": (function (){
return perform_action_BANG_(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_jump,(current_time + (60))], null));
})});
var G__27156 = "Jump";
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$3 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$3(G__27154,G__27155,G__27156) : sablono.core.create_element.call(null,G__27154,G__27155,G__27156));
})();
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$5 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$5(G__27143,G__27144,G__27145,G__27146,G__27147) : sablono.core.create_element.call(null,G__27143,G__27144,G__27145,G__27146,G__27147));
})():(function (){var G__27157 = "button";
var G__27158 = ({"onClick": (function (){
return cljs.core.reset_BANG_(data_atom,minikusari.tutorial3.infer(datascript.core.db_with(minikusari.tutorial3.flappy_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_start,(0)], null)], null)),minikusari.tutorial3.rules));
})});
var G__27159 = "Start!";
return (sablono.core.create_element.cljs$core$IFn$_invoke$arity$3 ? sablono.core.create_element.cljs$core$IFn$_invoke$arity$3(G__27157,G__27158,G__27159) : sablono.core.create_element.call(null,G__27157,G__27158,G__27159));
})())], null)));
}),cljs.core.cst$kw$initial_DASH_data,minikusari.tutorial3.flappy_db,cljs.core.cst$kw$options,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$frame,false,cljs.core.cst$kw$history,true], null)], null));
})], null));
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$card], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"card",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,devcards.core.markdown__GT_react.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["## Putting it all together","I hope that was interesting, seeing how a list of rules together can describe the state changes a system goes through","What I find fascinating is that when you add a new rule (say: `update-score`), you don't need to go and find the right place to add a function to transform the state","Every rule lives in a global space and it only needs to specify what bits of state it wants to react to (say: `:game/current-time`) to get called when it's needed","But yes, I know what you are about to say: where's the real flappy already? Don't worry, you can play the full version of the game below"], 0)),cljs.core.cst$kw$initial_DASH_data,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$options,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$heading,false], null),devcards.core.assert_options_map(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$hide_DASH_border,true], null))], 0))], null));
})], null));
if((typeof minikusari !== 'undefined') && (typeof minikusari.tutorial3 !== 'undefined') && (typeof minikusari.tutorial3.conn !== 'undefined')){
} else {
minikusari.tutorial3.conn = datascript.core.conn_from_db(minikusari.tutorial3.flappy_db);
}
minikusari.tutorial3.time_loop = (function minikusari$tutorial3$time_loop(){
var db = cljs.core.deref(minikusari.tutorial3.conn);
var map__27161 = (function (){var G__27162 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,cljs.core.list(cljs.core.cst$sym$pull,cljs.core.cst$sym$_QMARK_e,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_STAR_], null)),cljs.core.cst$sym$_DOT_,cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_], null)], null);
var G__27163 = db;
return (datascript.core.q.cljs$core$IFn$_invoke$arity$2 ? datascript.core.q.cljs$core$IFn$_invoke$arity$2(G__27162,G__27163) : datascript.core.q.call(null,G__27162,G__27163));
})();
var map__27161__$1 = (((((!((map__27161 == null))))?(((((map__27161.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__27161.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27161):map__27161);
var started_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27161__$1,cljs.core.cst$kw$game_SLASH_started_QMARK_);
if(cljs.core.truth_(started_QMARK_)){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(minikusari.tutorial3.conn,(function (p1__27160_SHARP_){
return minikusari.tutorial3.infer(datascript.core.db_with(p1__27160_SHARP_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_update_DASH_time,Date.now()], null)], null)),minikusari.tutorial3.rules);
}));
} else {
}

return setTimeout(minikusari.tutorial3.time_loop,(30));
});
if((typeof minikusari !== 'undefined') && (typeof minikusari.tutorial3 !== 'undefined') && (typeof minikusari.tutorial3.start_timer !== 'undefined')){
} else {
minikusari.tutorial3.start_timer = minikusari.tutorial3.time_loop();
}
devcards.core.register_card(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$path,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$minikusari$tutorial3,cljs.core.cst$kw$flappy_DASH_full], null),cljs.core.cst$kw$func,(function (){
return devcards.core.card_base(new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"flappy-full",cljs.core.cst$kw$documentation,null,cljs.core.cst$kw$main_DASH_obj,(function (data_atom){
var db = cljs.core.deref(data_atom);
var game = (function (){var G__27166 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,cljs.core.list(cljs.core.cst$sym$pull,cljs.core.cst$sym$_QMARK_e,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_STAR_], null)),cljs.core.cst$sym$_DOT_,cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$game_SLASH_started_QMARK_], null)], null);
var G__27167 = db;
return (datascript.core.q.cljs$core$IFn$_invoke$arity$2 ? datascript.core.q.cljs$core$IFn$_invoke$arity$2(G__27166,G__27167) : datascript.core.q.call(null,G__27166,G__27167));
})();
var flappy = (function (){var G__27168 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,cljs.core.list(cljs.core.cst$sym$pull,cljs.core.cst$sym$_QMARK_e,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_STAR_], null)),cljs.core.cst$sym$_DOT_,cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$flappy_SLASH_active_QMARK_], null)], null);
var G__27169 = db;
return (datascript.core.q.cljs$core$IFn$_invoke$arity$2 ? datascript.core.q.cljs$core$IFn$_invoke$arity$2(G__27168,G__27169) : datascript.core.q.call(null,G__27168,G__27169));
})();
var pillar_list = (function (){var G__27170 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$find,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$pull,cljs.core.cst$sym$_QMARK_e,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_STAR_], null)),cljs.core.cst$sym$$$$], null),cljs.core.cst$kw$where,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_QMARK_e,cljs.core.cst$kw$pillar_SLASH_cur_DASH_x], null)], null);
var G__27171 = db;
return (datascript.core.q.cljs$core$IFn$_invoke$arity$2 ? datascript.core.q.cljs$core$IFn$_invoke$arity$2(G__27170,G__27171) : datascript.core.q.call(null,G__27170,G__27171));
})();
var perform_action_BANG_ = (function (action){
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(data_atom,(function (p1__27165_SHARP_){
return minikusari.tutorial3.infer(datascript.core.db_with(p1__27165_SHARP_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [action], null)),minikusari.tutorial3.rules);
}));
});
var attrs27172 = minikusari.tutorial3.ui(game,flappy,pillar_list,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$start_DASH_game,(function (){
return cljs.core.reset_BANG_(data_atom,minikusari.tutorial3.infer(datascript.core.db_with(minikusari.tutorial3.flappy_db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_start,Date.now()], null)], null)),minikusari.tutorial3.rules));
}),cljs.core.cst$kw$jump,(function (){
return perform_action_BANG_(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$action_SLASH_jump,Date.now()], null));
})], null));
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(sablono.core.create_element,"div",((cljs.core.map_QMARK_(attrs27172))?sablono.interpreter.attributes(attrs27172):null),((cljs.core.map_QMARK_(attrs27172))?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs27172)], null)));
}),cljs.core.cst$kw$initial_DASH_data,minikusari.tutorial3.conn,cljs.core.cst$kw$options,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$frame,false], null)], null));
})], null));
